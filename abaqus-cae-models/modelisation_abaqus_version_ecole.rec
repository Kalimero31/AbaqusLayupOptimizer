# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['1_plaque_plane'].Part(name='plaque_plane-failed', objectToCopy=
    mdb.models['1_plaque_plane'].parts['plaque_plane'])
mdb.models['1_plaque_plane'].parts['plaque_plane-failed'].Unlock(
    reportWarnings=False)
del mdb.models['1_plaque_plane'].parts['plaque_plane']
mdb.models['1_plaque_plane'].parts.changeKey(fromName='plaque_plane-failed', 
    toName='plaque_plane')
mdb.models['1_plaque_plane'].rootAssembly.regenerate()
#* FeatureError: The assembly is locked and cannot be regenerated.
mdb.models['1_plaque_plane'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['1_plaque_plane'].parts['plaque_plane'].features['Shell planar-1'].sketch)
mdb.models['1_plaque_plane'].parts['plaque_plane'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['1_plaque_plane'].sketches['__edit__'], upToFeature=
    mdb.models['1_plaque_plane'].parts['plaque_plane'].features['Shell planar-1'])
mdb.models['1_plaque_plane'].sketches['__edit__'].dimensions[0].setValues(
    value=200)
mdb.models['1_plaque_plane'].parts['plaque_plane'].features['Shell planar-1'].setValues(
    sketch=mdb.models['1_plaque_plane'].sketches['__edit__'])
del mdb.models['1_plaque_plane'].sketches['__edit__']
mdb.models['1_plaque_plane'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['1_plaque_plane'].parts['plaque_plane'].features['Shell planar-1'].sketch)
mdb.models['1_plaque_plane'].parts['plaque_plane'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['1_plaque_plane'].sketches['__edit__'], upToFeature=
    mdb.models['1_plaque_plane'].parts['plaque_plane'].features['Shell planar-1'])
del mdb.models['1_plaque_plane'].sketches['__edit__']
mdb.models['1_plaque_plane'].parts['plaque_plane'].regenerate()
mdb.models['1_plaque_plane'].parts['plaque_plane'].compositeLayups['CompositeLayup'].deletePlies(
    )
mdb.models['1_plaque_plane'].parts['plaque_plane'].compositeLayups['CompositeLayup'].CompositePly(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=0.0
    , axis=AXIS_3, material='composite', numIntPoints=3, orientationType=
    SPECIFY_ORIENT, orientationValue=0.0, plyName='Ply-1', region=Region(
    faces=mdb.models['1_plaque_plane'].parts['plaque_plane'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )), suppressed=False, thickness=0.25, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['1_plaque_plane'].parts['plaque_plane'].compositeLayups['CompositeLayup'].deletePlies(
    )
